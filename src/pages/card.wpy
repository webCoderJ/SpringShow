<style lang="less">
.cardbg {
  background-size: 100% 100%;
  .cardMain {
    width: 525rpx;
    margin: 0 auto;
    margin-top: 350rpx;
    .inputor {
      width: 100%;
      display: inline-block;
      white-space: wrap;
      line-height: 64rpx;
      letter-spacing: 5rpx;
      padding: 10rpx 0rpx;
      text-overflow: hidden;
      font-size: 36rpx;
      color: #666;
      &.t-r {
        text-align: right;
      }
      &.area {
        height: 400rpx;
        overflow: hidden;
      }
    }
    .receiver {
      vertical-align: 120%;
      font-weight: 600;
      letter-spacing: 5rpx;
    }
  }

  .toolBar {
    position: fixed;
    padding: 20rpx 20rpx;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: space-around;
    bottom: -120rpx;
    width: 74%;
    left: 120rpx;
    background: #cb151d;
    opacity: 0.9;
    border-radius: 10rpx;
    font-size: 28rpx;
    color: #f9d127;
    box-shadow: 5px 5px 20px #cb151d;
    transition: all 0.66s ease;
    line-height: 1.5;
    &.active {
      bottom: 60rpx;
      width: 86%;
    }
    .toolbarTitle {
      width: 100rpx;
      flex: 1;
      color: aquamarine;
      margin-left: 15rpx;
    }
    .toolbarContent {
      flex: 7;
      display: flex;
      flex-flow: row nowrap;
      align-items: center;
      justify-content: space-around;
      .toolBarItem {
        text-align: left;
        display: flex;
        flex-flow: column nowrap;
        justify-content: space-around;
        align-items: center;
        .smallName {
          color: aquamarine;
          font-size: 20rpx;
        }
        .tooBarTip {
          width: 50rpx;
          color: aquamarine;
        }
      }
    }
  }
  @keyframes rotation{
	0%{
		transform:rotate(0deg);
	}
	100%{
		transform:rotate(360deg);
	}
}
.circle{
  animation:rotation 3s  infinite linear;
}
  .cardBtn {
    position: fixed;
    bottom: 60rpx;
    background: #cb151d;
    opacity: 0.9;
    padding: 20rpx 20rpx;
    color: #f9d127;
    border-radius: 10rpx;
    font-size: 28rpx;
    color: #f9d127;
    box-shadow: 5px 5px 20px #cb151d;
    line-height: 1.5;
    transition: all 0.66s ease;
    &.preview {
      left: 0;
    }
    &.share {
      right: 0;
    }
  }
}
</style>

<template>
<view class="showPage cardbg" style="width:{{ deviceW }}px; height: {{ deviceH }}px;background-image: url('{{ imgcdn }}/upload/img/backimg/card_bg.png');">
  <view class="cardMain">
    <view class="receiver">
      <input 
        wx:if="{{ cardInfo.showReceiver }}"
        value="{{ cardInfo.receiver }}" 
        class="inputor" 
        placeholder="收件人(可不填)："
        show-confirm-bar
        id="receiver"
        bindinput="inputContent"
      />
      <textarea 
        value="{{ cardInfo.content }}" 
        class="inputor area" 
        placeholder="贺卡内容："
        show-confirm-bar
        id="content"
        bindinput="inputContent"
      ></textarea>
      <input 
        value="{{ cardInfo.sender }}" 
        class="inputor t-r" 
        placeholder="发件人"
        show-confirm-bar
        id="sender"
        bindinput="inputContent"
      />        
    </view>
  </view>
  <view class="toolBar shadow {{ activeToolBar ? 'active': '' }}">
    <view class="toolbarTitle">
      写：
    </view>
    <view class="toolbarContent">
      <repeat for="{{ cardText.cardTypes }}" item="type" index="index" key="index">
        <view class="toolBarItem" @tap="changeWords" id="{{ type.name }}-{{ index }}">
          <view>{{ type.name }}</view>
        </view>
      </repeat>
      <view class="toolBarItem musicBar" @tap="changeMusic">
        <view class="music smallName">{{ musicInfo.name }}</view>
        <view class="music" wx:if="{{ musicInfo.url }}">
          ♫ 换一个
        </view>
        <view class="music" wx:else>
          ♫ 添加音乐  
        </view>
      </view>
    </view>
  </view>
  <view wx:if="{{ editStatus == '1' }}" class="cardBtn preview" @tap="preview">
    预览
  </view>
  <view wx:if="{{ editStatus == '2' }}" class="cardBtn preview" @tap="modify">
    编辑
  </view>
  <button wx:if="{{ editStatus == '2'&&!isshare }}" class="cardBtn share" open-type="share">
    发送
  </button>
   <navigator wx:elif="{{ editStatus == '2'&&isshare }}" url="/pages/index" class="cardBtn share">首页</navigator>
    
    <view wx:if="{{musicInfo.id}}" @tap="closeMusic" style="position:fixed;top:160rpx;right:70rpx;">
<image src="/imgs/music.png" class="{{play?'circle':''}}" style="width:60rpx;height:60rpx;border-radius:60rpx;"></image>

    </view>
</view>
</template>

<script>
import wepy from "wepy";
import * as util from "../utils/utilJs";
import WxTouchEvent from "../utils/wx-touch-event";
let TouchEvent = new WxTouchEvent();
export default class Avatar extends wepy.page {
  constructor(){
    super()
  }
  config = {
    navigationBarTitleText: '新年贺卡',
    enablePullDownRefresh: false
  };
  data = {
    deviceW: 0,
    deviceH: 0,
    imgcdn:  '',
    activeToolBar: false,
    editStatus: '1', // 1编辑 2预览
    isshare:false,
    cardInfo: {
      sender: '',
      receiver: '',
      content: '',
      contentId: 0,
      contentType: '',
      contentIndex: 0,
      showReceiver: true,
      shared: false
    },
    musicInfo: {
      id: '',
      index: '',
      url: '',
      name: ''
    },
    cardText: {
      cardTypes: []
    },
    musics: [],
    play:false
  };
  onShareAppMessage (res) {
    const _this = this
    _this.cardInfo.shared = true
    _this.cardInfo.sender = _this.userInfo.nickName
    let params = JSON.stringify({
      cardInfo: _this.cardInfo,
      musicInfo: _this.musicInfo
    })
    return {
      title: _this.cardInfo.sender + '发来一张贺卡，请查收~',
      path: '/pages/card?params=' + params
    }
  }
  async onLoad(e) {
    const _this = this;
    util.initData(_this)
    _this.userInfo = await util.getUserInfo()
    let shareParams = e.params ? JSON.parse(e.params) : {}
    // 将分享参数绑定到 vModel
    _this.$apply(() => { 
      Object.assign(_this.cardInfo, shareParams.cardInfo)
      Object.assign(_this.musicInfo, shareParams.musicInfo)
    })
    console.log('shareParams', shareParams)

    util.http.get(_this.domainname + '/api/YearShow/GetHeKa').then(data => {
      let res = data.data
      if(res.msg){
        _this.$apply(() => { // 相当于setData()
          // 初始化数据
          res.msg.personData.forEach(item => {
            _this.cardText[item.name] = item.data
            _this.cardText['cardTypes'].push({
              name: item.name
            })
          })
          _this.musics = res.msg.music
          // push一个空，用户切换的时候可以切到无音乐状态
          _this.musics.push({
            url: '',
            name: '',
            id: null,
            index: null
          })

          if(JSON.stringify(shareParams) != "{}"){
             _this.editStatus = '2'
             _this.activeToolBar = false
             _this.isshare=true;
            // 根据当前分享参数初始化卡片内容和音乐
            let contentId = shareParams.cardInfo.contentId, 
                type = shareParams.cardInfo.contentType;
            _this.cardText[type].forEach((item, index) => {
              if(item.id == contentId) {
                _this.cardInfo.content = item.content
                _this.cardInfo.contentId = contentId
                _this.cardInfo.contentIndex = index
                _this.cardInfo.contentType = type
              }
            })
            if(shareParams.musicInfo.url){
              // 播放
              console.log('play', _this.musicInfo.url ? _this.domainname + _this.musicInfo.url : '')
              util.play(_this.musicInfo.url ? _this.domainname + _this.musicInfo.url : '')
            }
          } else {
            _this.editStatus = '1'
            _this.activeToolBar = true
            _this.cardInfo.sender = _this.userInfo.nickName
          }
        })
      }
    })
  }
  methods = {
    touchStart: TouchEvent.start.bind(TouchEvent),
    touchMove: TouchEvent.move.bind(TouchEvent),
    touchEnd: TouchEvent.end.bind(TouchEvent),
    inputContent(e){
      const _this = this
      let type = e.currentTarget.id
      _this.$apply(() => { _this.cardInfo[type] = e.detail.value })
    },
    changeWords(e){
      const _this = this
      const domainname = _this.$parent.globalData.domainname
      let type = util.touchInfo(e).type
      if(type == _this.cardInfo.contentType){
        if(_this.cardInfo.contentIndex == (_this.cardText[type].length - 1)){
          _this.cardInfo.contentIndex = 0
        } else {
          _this.cardInfo.contentIndex += 1
        }
        let index = _this.cardInfo.contentIndex
        let card = _this.cardText[type][index] 
        _this.cardInfo.content = card.content
        _this.cardInfo.contentIndex = index
      } else {
        let card = _this.cardText[type][0]
        _this.cardInfo.contentType = type
        _this.cardInfo.contentId = card.id
        _this.cardInfo.contentIndex = 0
        _this.cardInfo.content = card.content
      }
    },
    changeMusic(){
      const _this = this
      const domainname = _this.$parent.globalData.domainname
      _this.$apply(() => {
        // 如果没有音乐，添加一个
        if(!_this.musicInfo.url) {
          _this.musicInfo = Object.assign({index: 0}, _this.musics[0])
        } else {
          let index = _this.musicInfo.index
          if(index == _this.musics.length - 1){
            index = 0
          } else {
            index += 1
          }
          _this.musicInfo = Object.assign({ index: index }, _this.musics[index])
        }
        // 播放
         _this.play=true
        util.play(_this.musicInfo.url ? domainname + _this.musicInfo.url : '')
      })
    },
    closeMusic(){
       const _this = this
     
      _this.$apply(() => {
        _this.play=!_this.play
        // 停止
       util.stop(_this.play,_this.musicInfo)
      })
 
    },
    preview () {
      const _this = this
      _this.cardInfo.showReceiver = !!_this.cardInfo.receiver
      _this.activeToolBar = false
      _this.editStatus = '2'
    },
    modify () {
      const _this = this
      _this.cardInfo.showReceiver = true
      _this.activeToolBar = true
      _this.editStatus = '1'
      _this.isshare=false
      _this.cardInfo.sender =_this.cardInfo.sender?_this.cardInfo.sender: _this.userInfo.nickName
    }
  };
}
</script>
